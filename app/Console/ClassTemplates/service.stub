<?php

namespace App\DataAccessLayer\Services;

use Illuminate\Database\Eloquent\Model;
use App\DataAccessLayer\Interfaces\{{ modelName }}RepositoryInterface;
use Illuminate\Database\Eloquent\Collection;

class {{ modelName }}Service
{
    public function __construct(private {{ modelName }}RepositoryInterface ${{ repositoryName }})
    {
    }

    public function create(array $attributes): Model
    {
        return $this->{{ repositoryName }}->create($attributes);
    }

    public function fetchAll(): Collection
    {
        return $this->{{ repositoryName }}->all();
    }

    public function getById(int $id): Model
    {
        return $this->{{ repositoryName }}->findOrFail($id);
    }

    public function update(int $id, array $params): Model
    {
        $model = $this->{{ repositoryName }}->findOrFail($id);
        $model->update($params);

        return $model;
    }

    public function delete(int $id): void
    {
        $this->{{ repositoryName }}->findOrFail($id)
            ->delete();
    }
}
