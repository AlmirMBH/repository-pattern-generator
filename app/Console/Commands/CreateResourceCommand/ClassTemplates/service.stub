<?php

namespace App\DataAccessLayer\Services;

use Illuminate\Database\Eloquent\Model;
use App\DataAccessLayer\Interfaces\{{ modelName }}RepositoryInterface;
use Illuminate\Database\Eloquent\Collection;

class {{ modelName }}Service
{
    public function __construct(private readonly {{ modelName }}RepositoryInterface ${{ repositoryName }})
    {
    }

    public function create{{ modelName }}(array $attributes): Model
    {
        return $this->{{ repositoryName }}->create($attributes);
    }

    public function getAll(): Collection
    {
        return $this->{{ repositoryName }}->fetchAll();
    }

    public function get{{ modelName }}ById(int $id): Model
    {
        return $this->{{ repositoryName }}->getById($id);
    }

    public function update{{ modelName }}ById(int $id, array $params): Model
    {
        return $this->{{ repositoryName }}->update($id, $params);
    }

    public function delete{{ modelName }}ById(int $id): bool
    {
        return $this->{{ repositoryName }}->delete($id);
    }
}
